
@{
    ViewData["Title"] = "Products Page";
}

@model ProductsListViewModel

<div class="gradient-header">
    <div>
        <h1 class="title">Shop Lego Sets</h1>
        <h2 class="subtitle">Browse through a unique assortment of sets</h2>
    </div>
</div>

<div class="container-fluid">
        <!-- Filter Column -->
        <div class="col-md-3">
            <div class="filter-box">
                <h3 class="filter-header">Filters</h3>
                <!-- Product Types Filter -->
                <vc:product-types></vc:product-types>
                <!-- Color Type Filter -->
                <vc:color-type></vc:color-type>
                <!-- Add Pagination Size Filter here (if applicable) -->
            </div>
        </div>
        
    <!-- Products Column -->
    <div class="col-md-9">
        <!-- Products List -->
        @foreach (Product b in Model.Products)
        {
            <partial name="ProductSummary" model="b"/>
        }

        @foreach (var size in Model.AvailablePageSizes)
        {
            <a href="@Url.Action("Products", "Home", new { productType = Model.CurrentProductType, colorType = Model.CurrentColorType, pageNum = 1, pageSize = size })" class="btn @(Model.SelectedPageSize == size ? "btn-primary" : "btn-outline-secondary")">@size</a>
        }

        <!-- Pagination -->
        <div page-model="@Model.PaginationInfo" page-action="Products" page-classes-enabled="true" page-class="btn"
             page-class-normal="btn-outline-dark" page-class-selected="btn-primary"
             page-url-productType="@Model.CurrentProductType" page-url-colorType="@Model.CurrentColorType" page-url-pageSize="@Model.SelectedPageSize"
             class="btn-group pull-right m-1">
        </div>
    </div>
    </div>
